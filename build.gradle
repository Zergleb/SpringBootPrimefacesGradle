buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.6.RELEASE")
    }
}
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
version = '1.0-SNAPSHOT'

//read springboot properties access prop: applicationProperties['my.prop']
def applicationProperties = new Properties()
new File("$projectDir/src/main/resources/application.properties").withInputStream {
    stream -> applicationProperties.load(stream)
}

//refersh changing deps always
configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, "seconds"
    }
}

repositories {
    mavenCentral()
    maven { url "http://repository.primefaces.org" }
    maven { url "https://github.com/dasAnderl/maven-repo/raw/master/snapshots"}
    maven { url "https://github.com/dasAnderl/maven-repo/raw/master/releases"}
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.boot:spring-boot-starter-jetty",
            "org.springframework:spring-web",
            "org.springframework:spring-webmvc",
            'org.springframework.data:spring-data-jpa',
            "com.h2database:h2",
            'org.hibernate:hibernate-core',
            'org.hibernate.javax.persistence:hibernate-jpa-2.0-api',
            "org.primefaces:primefaces:5.0",
            "com.sun.faces:jsf-api:2.+",
            "com.sun.faces:jsf-impl:2.+",
            "org.hibernate:hibernate-validator",
            'com.google.guava:guava:18.0',
            'com.google.guava:guava-collections:r03',
            "javax.validation:validation-api",
            "org.codehaus.groovy:groovy-all"
    compile("com.anderl:hibernate-ext-java8:1.0-SNAPSHOT"){ changing = true }

    testCompile "org.springframework.boot:spring-boot-starter-test",
            'junit:junit:jar'

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

import org.apache.tools.ant.taskdefs.condition.Os
boolean isWindows() {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) return true
}

task bootShutdown() {
    def port = applicationProperties["server.port"]
    def command = "curl -X POST localhost:$port/shutdown"
    if (isWindows())command = "curl.exe -X POST localhost:$port/shutdown"
    println "shutdown cmd is $command"
    def proc = command.execute()
    proc.waitFor()
}
sourceSets.main.groovy.srcDirs += ["src/main/java"]
sourceSets.test.groovy.srcDirs += ["src/test/java"]