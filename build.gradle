buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.6.RELEASE")
    }
}
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'PrimeFacesOnSpringBoot',
                'Implementation-Version': version
    }
}

//read springboot properties access prop: applicationProperties['my.prop']
def applicationProperties = new Properties()
new File("$projectDir/src/main/resources/application.properties").withInputStream {
    stream -> applicationProperties.load(stream)
}

repositories {
    mavenCentral()
    maven { url "http://repository.primefaces.org" }
}

def versionSpring = "4.1.0.RELEASE"
def versionSpringBoot = "1.1.6.RELEASE"

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$versionSpringBoot",
            "org.springframework.boot:spring-boot-starter-actuator:$versionSpringBoot",
            "org.springframework.boot:spring-boot-starter-jetty:$versionSpringBoot",
            "org.springframework:spring-web:$versionSpring",
            "org.springframework:spring-webmvc:$versionSpring",
            'org.springframework.data:spring-data-jpa:1.6.4.RELEASE',
            "com.h2database:h2:1.4.181",
            'org.hibernate:hibernate-core:4.3.6.Final',
            'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final',
            "org.primefaces:primefaces:5.0",
            "com.sun.faces:jsf-api:2.+",
            "com.sun.faces:jsf-impl:2.+",
            "org.hibernate:hibernate-validator:5.1.2.Final",
            'com.google.guava:guava:18.0',
            'com.google.guava:guava-collections:r03',
            "javax.validation:validation-api:1.1.0.Final",
            "org.codehaus.groovy:groovy-all:2.3.6"

    testCompile "org.springframework.boot:spring-boot-starter-test:$versionSpringBoot",
            'junit:junit:jar:4.11'

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

import org.apache.tools.ant.taskdefs.condition.Os
boolean isWindows() {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) return true
}

task bootShutdown() {
    def port = applicationProperties["server.port"]
    def command = "curl -X POST localhost:$port/shutdown"
    if (isWindows())command = "curl.exe -X POST localhost:$port/shutdown"
    println "shutdown cmd is $command"
    def proc = command.execute()
    proc.waitFor()
}
sourceSets.main.groovy.srcDirs += ["src/main/java"]
sourceSets.test.groovy.srcDirs += ["src/test/java"]